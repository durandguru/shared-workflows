name: Terraform Apply

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      TEST: 
        required: true

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

defaults:
  run:
    working-directory: ./spcon902
          
jobs:
  tfapply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - name: "Say Hello Mona it's Monday"
        run: |
          echo "dit is sshhost ${{ vars.SSH_HOST }} !"
          echo "dit is sshuser ${{ vars.SSH_USER }} !"
          echo "dit is wgclientip ${{ vars.WG_CLIENT_IP }} !"
          echo "dit is wgendpoint ${{ vars.SHARED_WG_SERVER_ENDPOINT }} !"
          echo "dit is wgipspace ${{ vars.SHARED_WG_SERVER_IPSPACE }} !"
          echo "dit is wgpupkey ${{ vars.SHARED_WG_SERVER_PUBLICKEY }} !"
          echo "dit is aztenant ${{ vars.SHARED_AZURE_TENANT_ID }} !"
          echo "dit is azclientd ${{ vars.SHARED_AZURE_CLIENT_ID }} !"
          echo "dit is azsub ${{ vars.SHARED_AZURE_SUBSCRIPTION_ID }} !"
      
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Wireguard - Install
      - name: Wireguard - Install
        run: sudo apt install wireguard wireguard-tools

      # Wireguard - Setup
      - name: Wireguard - Setup
        run: | 
          echo "${{ secrets.WG_CLIENT_PRIVATEKEY }}" > privatekey
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 ${{ vars.WG_CLIENT_IP }}
          sudo wg set wg0 listen-port 48123 private-key privatekey peer ${{ vars.SHARED_WG_SERVER_PUBLICKEY }} allowed-ips ${{ vars.SHARED_WG_SERVER_IPSPACE }} endpoint ${{ vars.SHARED_WG_SERVER_ENDPOINT }}
          sudo ip link set up dev wg0
          sudo ip route add ${{ vars.SHARED_WG_SERVER_IPSPACE }} dev wg0

      # Write Private SSH Key
      - name: Write Key Files
        run: |
          mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts
          ssh-keyscan ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Update Docker Config on host
      - name: Update Docker Config files on host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: "22"
          script: |
            cd docker-config-files
            git pull origin main

      # Terraform Setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Login to Azure CLI
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{ vars.SHARED_AZURE_CLIENT_ID }}
            tenant-id: ${{ vars.SHARED_AZURE_TENANT_ID }}
            subscription-id: ${{ vars.SHARED_AZURE_SUBSCRIPTION_ID }}

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan