name: tf-plan

on:
  workflow_call:

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ vars.SHARED_AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ vars.SHARED_AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ vars.SHARED_AZURE_TENANT_ID }}"
          
jobs:
  tf-plan:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    env:
        #this is needed since we are running terraform with read-only permissions
        ARM_SKIP_PROVIDER_REGISTRATION: true
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4.1.1

      # Terraform Setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.0.0

      # Login to Azure CLI
      - name: 'Az CLI login'
        uses: Azure/login@v2
        with:
            client-id: ${{ vars.SHARED_AZURE_CLIENT_ID }}
            tenant-id: ${{ vars.SHARED_AZURE_TENANT_ID }}
            subscription-id: ${{ vars.SHARED_AZURE_SUBSCRIPTION_ID }}

      # TF Lint Setup
      - name: TFLint Setup
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_wrapper: true

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform FMT
      - name: Terraform Format
        run: terraform fmt -check
     
      # Terraform Validate
      - name: Terraform Validate
        run: terraform validate -no-color

      # TFLint Init  
      - name: TFLint Init
        run: tflint --init
        
      # TFLint Run
      - name: TFLint Run
        run: tflint -f compact
        continue-on-error: false

      # TFSec Run  
      - name: TFSec Run
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true 

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan