name: Terraform Apply

on:
  workflow_call:
    inputs:
      device:
        required: true
        type: string
    secrets:
      SHARED_WG_CLIENT_PRIVATEKEY: 
        required: true
      MIKROTIK_PASSWORD: 
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
jobs:
  tfapply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4.2.2

      # Wireguard - Install
      - name: Wireguard - Install
        run: sudo apt install wireguard wireguard-tools

      # Wireguard - Setup
      - name: Wireguard - Setup
        run: | 
          echo "${{ secrets.SHARED_WG_CLIENT_PRIVATEKEY }}" > privatekey
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 ${{ vars.SHARED_WG_CLIENT_IP }}
          sudo wg set wg0 listen-port 48123 private-key privatekey peer ${{ vars.SHARED_WG_SERVER_PUBLICKEY }} allowed-ips '${{ vars.SHARED_WG_SERVER_IPSPACE }}, ${{ vars.SHARED_WG_SERVER_IPSPACE2 }}' endpoint ${{ vars.SHARED_WG_SERVER_ENDPOINT }}
          sudo ip link set up dev wg0
          sudo ip route add ${{ vars.SHARED_WG_SERVER_IPSPACE }} dev wg0
          sudo ip route add ${{ vars.SHARED_WG_SERVER_IPSPACE2 }} dev wg0
          sudo netplan set ethernets.eth0.nameservers.addresses="[10.252.11.11]"
          sudo netplan apply
          sudo netplan get

      # Add Self Signed Root CA
      - name: Add Self Signed Root CA
        run: |
          sudo wget -O /usr/local/share/ca-certificates/Durand-Guru-Root-CA.crt "https://durand.nl/Durand-Guru-Root-CA.crt"
          sudo wget -O /usr/local/share/ca-certificates/Atletiekunie-es-CA.crt "https://durand.nl/Atletiekunie-es-CA.crt"
          sudo wget -O /usr/local/share/ca-certificates/Durand-li-CA.crt "https://durand.nl/Durand-li-CA.crt"
          sudo wget -O /usr/local/share/ca-certificates/U-Steck-nl-CA.crt "https://durand.nl/U-Steck-nl-CA.crt"
          sudo wget -O /usr/local/share/ca-certificates/Durand-Guru-Root-CA.pem "https://durand.nl/Durand-Guru-Root-CA.pem"
          sudo update-ca-certificates

      # Setup Terraform Variables
      - name: Setup Terraform variables
        id: vars
        run: |-
          cat > pipeline.auto.tfvars <<EOF
          network_password = "${{ secrets.MIKROTIK_PASSWORD }}"
          EOF

      # Terraform Setup
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2

      # Terraform Init
      - name: Terraform Init
        run: terraform init -upgrade -reconfigure -backend-config=${{ inputs.device }}/${{ inputs.device }}.hcl

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -var-file=${{ inputs.device }}/${{ inputs.device }}.tfvars -auto-approve

      # NTFY Message (https://ntfy.durand.guru/docs/examples/?h=git#github-actions) (https://docs.github.com/en/actions/learn-github-actions/contexts)
      - name: NTFY
        if: always()
        run: |
          curl \
          -H "Title: ${{ github.workflow }} has status ${{ job.status}}" \
          -H "Content-Type: text/plain" \
          -d $'Repo: ${{ github.repository }}\nCommit: ${{ github.event.head_commit.message }}\nBy: ${{ github.actor }}\nStatus: ${{ job.status}}' \
          ${{ vars.NTFY_URL }}