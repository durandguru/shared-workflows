name: Nginx rsync

on:
  workflow_call:
    secrets:
      WG_CLIENT_PRIVATEKEY: 
        required: true
      SSH_KEY: 
        required: true

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  nginx-rsync:
    name: "Nginx Rsync"
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4.1.5

      # Wireguard - Install
      - name: Wireguard - Install
        run: sudo apt install wireguard wireguard-tools

      # Wireguard - Setup
      - name: Wireguard - Setup
        run: | 
          echo "${{ secrets.WG_CLIENT_PRIVATEKEY }}" > privatekey
          sudo ip link add dev wg0 type wireguard
          sudo ip address add dev wg0 ${{ vars.WG_CLIENT_IP }}
          sudo wg set wg0 listen-port 48123 private-key privatekey peer ${{ vars.SHARED_WG_SERVER_PUBLICKEY }} allowed-ips ${{ vars.SHARED_WG_SERVER_IPSPACE }} endpoint ${{ vars.SHARED_WG_SERVER_ENDPOINT }}
          sudo ip link set up dev wg0
          sudo ip route add ${{ vars.SHARED_WG_SERVER_IPSPACE }} dev wg0

      # Write Private SSH Key
      - name: Write Key Files
        run: |
          mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts
          ssh-keyscan ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Rsync Config Files to Host
      - name: rsync config files to host
        run: |
          rsync -avzr --delete ${{ github.workspace }}/public/ ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }}:${{ vars.SSH_FOLDER }}
